//! # Even Fibonacci numbers
//!
//! Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//!
//! > 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//!
//! By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

use crate::numbers::fibonacci;

pub fn run() {
    println!("{}", sum_of_even(4_000_000));
}

fn sum_of_even(max: u64) -> u64 {
    fibonacci::FibIter::new(1, 2)
        .filter(|f| *f % 2 == 0)
        .take_while(|f| *f <= max)
        .sum()
}
